


ARM Macro Assembler    Page 1 


    1 00000000         ; ******************************************************
                       ************************
    2 00000000         ; File:      startup.s
    3 00000000         ; Brief:     System startup code
    4 00000000         ; Author:   Krzysztof Koch
    5 00000000         ; Version:  V1.00
    6 00000000         ; Date created: 26/09/2016
    7 00000000         ; Last mod:  10/03/2016
    8 00000000         ;
    9 00000000         ; Note:   
   10 00000000         ; System startup code containing stack and heap definiti
                       ons as well as simple 
   11 00000000         ; exception and interrupt handlers. This file also conta
                       ins the PendSV IRQ 
   12 00000000         ; handler for context switching and SVC call handler for
                        initial handling of
   13 00000000         ;  the system calls to the KrisOS (the rest is done C)
   14 00000000         ; ******************************************************
                       ************************
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         ;-------------------------------------------------------
                       ------------------------
   19 00000000         ; Stack Configuration. There are two separate stacks use
                       d for each of the 
   20 00000000         ; processor modes. The Handler mode stack (pointed to by
                        MSP) should be large 
   21 00000000         ; enough for all KrisOS kernel code. The Thread mode sta
                       ck memory can be fairly
   22 00000000         ; small as each user task uses its own private stack mem
                       ory anyways, so it is only
   23 00000000         ; used at startup time, right after the write to CONTROL
                        register which degrades
   24 00000000         ; Thread (user) mode to be unpriviliged.
   25 00000000         ;-------------------------------------------------------
                       ------------------------
   26 00000000 00000200 
                       Handler_Stack_Size
                               EQU              0x00000200  ; Stack size for ha
                                                            ndler mode (MSP)
   27 00000000 00000100 
                       Thread_Stack_Size
                               EQU              0x00000100  ; Stack size for th
                                                            read mode (PSP)
   28 00000000         
   29 00000000         
   30 00000000         ; Stack memory area - RAM, uninitialised with 8-byte ali
                       gnment 
   31 00000000         ; (requirement of AAPCS)
   32 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   33 00000000         
   34 00000000         Handler_Stack
                               SPACE            Handler_Stack_Size
   35 00000200         __initial_handler_sp
   36 00000200         
   37 00000200         Thread_Stack
                               SPACE            Thread_Stack_Size



ARM Macro Assembler    Page 2 


   38 00000300         __initial_sp
   39 00000300         
   40 00000300         
   41 00000300         
   42 00000300         ;-------------------------------------------------------
                       ------------------------
   43 00000300         ; Heap Configuration. The heap size is zero because a se
                       parate heap implementation
   44 00000300         ; is used with its own heap memory definition. (See heap
                       .c)
   45 00000300         ;-------------------------------------------------------
                       ------------------------
   46 00000300                 EXPORT           Heap_Size
   47 00000300 00000000 
                       Heap_Size
                               EQU              0x00000000
   48 00000300         
   49 00000300         ; HEAP memory area - RAM, uninitialised with 8-byte alig
                       nment 
   50 00000300         ; (requirement of AAPCS)
   51 00000300                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   52 00000000         Heap_Mem
                               SPACE            Heap_Size
   53 00000000         __heap_limit
   54 00000000         
   55 00000000         
   56 00000000         
   57 00000000         ;-------------------------------------------------------
                       ------------------------
   58 00000000         ; Vector Table Mapped to Address 0 at Reset
   59 00000000         ;-------------------------------------------------------
                       ------------------------
   60 00000000                 PRESERVE8                    ; Preserve eight-by
                                                            te alignment of the
                                                             stack
   61 00000000                 THUMB                        ; Use Thumb instruc
                                                            tion set
   62 00000000                 AREA             RESET, DATA, READONLY ; Data to
                                                             be placed in ROM a
                                                            t address 0x0 
   63 00000000         
   64 00000000         
   65 00000000                 EXPORT           __Vectors
   66 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   67 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   68 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   69 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   70 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   71 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   72 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler



ARM Macro Assembler    Page 3 


   73 0000001C 00000000        DCD              0           ; Reserved
   74 00000020 00000000        DCD              0           ; Reserved
   75 00000024 00000000        DCD              0           ; Reserved
   76 00000028 00000000        DCD              0           ; Reserved
   77 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   78 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   79 00000034 00000000        DCD              0           ; Reserved
   80 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   81 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   82 00000040         
   83 00000040         ; External Interrupts
   84 00000040 00000000        DCD              GPIOA_Handler 
                                                            ;   0: GPIO Port A
   85 00000044 00000000        DCD              GPIOB_Handler 
                                                            ;   1: GPIO Port B
   86 00000048 00000000        DCD              GPIOC_Handler 
                                                            ;   2: GPIO Port C
   87 0000004C 00000000        DCD              GPIOD_Handler 
                                                            ;   3: GPIO Port D
   88 00000050 00000000        DCD              GPIOE_Handler 
                                                            ;   4: GPIO Port E
   89 00000054 00000000        DCD              UART0_Handler ;   5: UART0 Rx a
                                                            nd Tx
   90 00000058 00000000        DCD              UART1_Handler ;   6: UART1 Rx a
                                                            nd Tx
   91 0000005C 00000000        DCD              SSI0_Handler ;   7: SSI0 Rx and
                                                             Tx
   92 00000060 00000000        DCD              I2C0_Handler ;   8: I2C0 Master
                                                             and Slave
   93 00000064 00000000        DCD              PMW0_FAULT_Handler 
                                                            ;   9: PWM Fault
   94 00000068 00000000        DCD              PWM0_0_Handler ;  10: PWM Gener
                                                            ator 0
   95 0000006C 00000000        DCD              PWM0_1_Handler ;  11: PWM Gener
                                                            ator 1
   96 00000070 00000000        DCD              PWM0_2_Handler ;  12: PWM Gener
                                                            ator 2
   97 00000074 00000000        DCD              QEI0_Handler ;  13: Quadrature 
                                                            Encoder 0
   98 00000078 00000000        DCD              ADC0SS0_Handler ;  14: ADC Sequ
                                                            ence 0
   99 0000007C 00000000        DCD              ADC0SS1_Handler ;  15: ADC Sequ
                                                            ence 1
  100 00000080 00000000        DCD              ADC0SS2_Handler ;  16: ADC Sequ
                                                            ence 2
  101 00000084 00000000        DCD              ADC0SS3_Handler ;  17: ADC Sequ
                                                            ence 3
  102 00000088 00000000        DCD              WDT0_Handler ;  18: Watchdog ti
                                                            mer
  103 0000008C 00000000        DCD              TIMER0A_Handler ;  19: Timer 0 
                                                            subtimer A
  104 00000090 00000000        DCD              TIMER0B_Handler ;  20: Timer 0 
                                                            subtimer B
  105 00000094 00000000        DCD              TIMER1A_Handler ;  21: Timer 1 
                                                            subtimer A
  106 00000098 00000000        DCD              TIMER1B_Handler ;  22: Timer 1 



ARM Macro Assembler    Page 4 


                                                            subtimer B
  107 0000009C 00000000        DCD              TIMER2A_Handler ;  23: Timer 2 
                                                            subtimer A
  108 000000A0 00000000        DCD              TIMER2B_Handler ;  24: Timer 2 
                                                            subtimer B
  109 000000A4 00000000        DCD              COMP0_Handler ;  25: Analog Com
                                                            parator 0
  110 000000A8 00000000        DCD              COMP1_Handler ;  26: Analog Com
                                                            parator 1
  111 000000AC 00000000        DCD              COMP2_Handler ;  27: Analog Com
                                                            parator 2
  112 000000B0 00000000        DCD              SYSCTL_Handler ;  28: System Co
                                                            ntrol (PLL, OSC, BO
                                                            )
  113 000000B4 00000000        DCD              FLASH_Handler ;  29: FLASH Cont
                                                            rol
  114 000000B8 00000000        DCD              GPIOF_Handler 
                                                            ;  30: GPIO Port F
  115 000000BC 00000000        DCD              GPIOG_Handler 
                                                            ;  31: GPIO Port G
  116 000000C0 00000000        DCD              GPIOH_Handler 
                                                            ;  32: GPIO Port H
  117 000000C4 00000000        DCD              UART2_Handler ;  33: UART2 Rx a
                                                            nd Tx
  118 000000C8 00000000        DCD              SSI1_Handler ;  34: SSI1 Rx and
                                                             Tx
  119 000000CC 00000000        DCD              TIMER3A_Handler ;  35: Timer 3 
                                                            subtimer A
  120 000000D0 00000000        DCD              TIMER3B_Handler ;  36: Timer 3 
                                                            subtimer B
  121 000000D4 00000000        DCD              I2C1_Handler ;  37: I2C1 Master
                                                             and Slave
  122 000000D8 00000000        DCD              QEI1_Handler ;  38: Quadrature 
                                                            Encoder 1
  123 000000DC 00000000        DCD              CAN0_Handler ;  39: CAN0
  124 000000E0 00000000        DCD              CAN1_Handler ;  40: CAN1
  125 000000E4 00000000        DCD              CAN2_Handler ;  41: CAN2
  126 000000E8 00000000        DCD              0           ;  42: Reserved
  127 000000EC 00000000        DCD              HIB_Handler ;  43: Hibernate
  128 000000F0 00000000        DCD              USB0_Handler ;  44: USB0
  129 000000F4 00000000        DCD              PWM0_3_Handler ;  45: PWM Gener
                                                            ator 3
  130 000000F8 00000000        DCD              UDMA_Handler ;  46: uDMA Softwa
                                                            re Transfer
  131 000000FC 00000000        DCD              UDMAERR_Handler 
                                                            ;  47: uDMA Error
  132 00000100 00000000        DCD              ADC1SS0_Handler ;  48: ADC1 Seq
                                                            uence 0
  133 00000104 00000000        DCD              ADC1SS1_Handler ;  49: ADC1 Seq
                                                            uence 1
  134 00000108 00000000        DCD              ADC1SS2_Handler ;  50: ADC1 Seq
                                                            uence 2
  135 0000010C 00000000        DCD              ADC1SS3_Handler ;  51: ADC1 Seq
                                                            uence 3
  136 00000110 00000000        DCD              0           ;  52: Reserved
  137 00000114 00000000        DCD              0           ;  53: Reserved
  138 00000118 00000000        DCD              GPIOJ_Handler 
                                                            ;  54: GPIO Port J
  139 0000011C 00000000        DCD              GPIOK_Handler 



ARM Macro Assembler    Page 5 


                                                            ;  55: GPIO Port K
  140 00000120 00000000        DCD              GPIOL_Handler 
                                                            ;  56: GPIO Port L
  141 00000124 00000000        DCD              SSI2_Handler ;  57: SSI2 Rx and
                                                             Tx
  142 00000128 00000000        DCD              SSI3_Handler ;  58: SSI3 Rx and
                                                             Tx
  143 0000012C 00000000        DCD              UART3_Handler ;  59: UART3 Rx a
                                                            nd Tx
  144 00000130 00000000        DCD              UART4_Handler ;  60: UART4 Rx a
                                                            nd Tx
  145 00000134 00000000        DCD              UART5_Handler ;  61: UART5 Rx a
                                                            nd Tx
  146 00000138 00000000        DCD              UART6_Handler ;  62: UART6 Rx a
                                                            nd Tx
  147 0000013C 00000000        DCD              UART7_Handler ;  63: UART7 Rx a
                                                            nd Tx
  148 00000140 00000000        DCD              0           ;  64: Reserved
  149 00000144 00000000        DCD              0           ;  65: Reserved
  150 00000148 00000000        DCD              0           ;  66: Reserved
  151 0000014C 00000000        DCD              0           ;  67: Reserved
  152 00000150 00000000        DCD              I2C2_Handler ;  68: I2C2 Master
                                                             and Slave
  153 00000154 00000000        DCD              I2C3_Handler ;  69: I2C3 Master
                                                             and Slave
  154 00000158 00000000        DCD              TIMER4A_Handler ;  70: Timer 4 
                                                            subtimer A
  155 0000015C 00000000        DCD              TIMER4B_Handler ;  71: Timer 4 
                                                            subtimer B
  156 00000160 00000000        DCD              0           ;  72: Reserved
  157 00000164 00000000        DCD              0           ;  73: Reserved
  158 00000168 00000000        DCD              0           ;  74: Reserved
  159 0000016C 00000000        DCD              0           ;  75: Reserved
  160 00000170 00000000        DCD              0           ;  76: Reserved
  161 00000174 00000000        DCD              0           ;  77: Reserved
  162 00000178 00000000        DCD              0           ;  78: Reserved
  163 0000017C 00000000        DCD              0           ;  79: Reserved
  164 00000180 00000000        DCD              0           ;  80: Reserved
  165 00000184 00000000        DCD              0           ;  81: Reserved
  166 00000188 00000000        DCD              0           ;  82: Reserved
  167 0000018C 00000000        DCD              0           ;  83: Reserved
  168 00000190 00000000        DCD              0           ;  84: Reserved
  169 00000194 00000000        DCD              0           ;  85: Reserved
  170 00000198 00000000        DCD              0           ;  86: Reserved
  171 0000019C 00000000        DCD              0           ;  87: Reserved
  172 000001A0 00000000        DCD              0           ;  88: Reserved
  173 000001A4 00000000        DCD              0           ;  89: Reserved
  174 000001A8 00000000        DCD              0           ;  90: Reserved
  175 000001AC 00000000        DCD              0           ;  91: Reserved
  176 000001B0 00000000        DCD              TIMER5A_Handler ;  92: Timer 5 
                                                            subtimer A
  177 000001B4 00000000        DCD              TIMER5B_Handler ;  93: Timer 5 
                                                            subtimer B
  178 000001B8 00000000        DCD              WTIMER0A_Handler ;  94: Wide Ti
                                                            mer 0 subtimer A
  179 000001BC 00000000        DCD              WTIMER0B_Handler ;  95: Wide Ti
                                                            mer 0 subtimer B
  180 000001C0 00000000        DCD              WTIMER1A_Handler ;  96: Wide Ti
                                                            mer 1 subtimer A



ARM Macro Assembler    Page 6 


  181 000001C4 00000000        DCD              WTIMER1B_Handler ;  97: Wide Ti
                                                            mer 1 subtimer B
  182 000001C8 00000000        DCD              WTIMER2A_Handler ;  98: Wide Ti
                                                            mer 2 subtimer A
  183 000001CC 00000000        DCD              WTIMER2B_Handler ;  99: Wide Ti
                                                            mer 2 subtimer B
  184 000001D0 00000000        DCD              WTIMER3A_Handler ; 100: Wide Ti
                                                            mer 3 subtimer A
  185 000001D4 00000000        DCD              WTIMER3B_Handler ; 101: Wide Ti
                                                            mer 3 subtimer B
  186 000001D8 00000000        DCD              WTIMER4A_Handler ; 102: Wide Ti
                                                            mer 4 subtimer A
  187 000001DC 00000000        DCD              WTIMER4B_Handler ; 103: Wide Ti
                                                            mer 4 subtimer B
  188 000001E0 00000000        DCD              WTIMER5A_Handler ; 104: Wide Ti
                                                            mer 5 subtimer A
  189 000001E4 00000000        DCD              WTIMER5B_Handler ; 105: Wide Ti
                                                            mer 5 subtimer B
  190 000001E8 00000000        DCD              FPU_Handler ; 106: FPU
  191 000001EC 00000000        DCD              0           ; 107: Reserved
  192 000001F0 00000000        DCD              0           ; 108: Reserved
  193 000001F4 00000000        DCD              I2C4_Handler ; 109: I2C4 Master
                                                             and Slave
  194 000001F8 00000000        DCD              I2C5_Handler ; 110: I2C5 Master
                                                             and Slave
  195 000001FC 00000000        DCD              GPIOM_Handler 
                                                            ; 111: GPIO Port M
  196 00000200 00000000        DCD              GPION_Handler 
                                                            ; 112: GPIO Port N
  197 00000204 00000000        DCD              QEI2_Handler ; 113: Quadrature 
                                                            Encoder 2
  198 00000208 00000000        DCD              0           ; 114: Reserved
  199 0000020C 00000000        DCD              0           ; 115: Reserved
  200 00000210 00000000        DCD              GPIOP0_Handler ; 116: GPIO Port
                                                             P (Summary or P0)
  201 00000214 00000000        DCD              GPIOP1_Handler 
                                                            ; 117: GPIO Port P1
                                                            
  202 00000218 00000000        DCD              GPIOP2_Handler 
                                                            ; 118: GPIO Port P2
                                                            
  203 0000021C 00000000        DCD              GPIOP3_Handler 
                                                            ; 119: GPIO Port P3
                                                            
  204 00000220 00000000        DCD              GPIOP4_Handler 
                                                            ; 120: GPIO Port P4
                                                            
  205 00000224 00000000        DCD              GPIOP5_Handler 
                                                            ; 121: GPIO Port P5
                                                            
  206 00000228 00000000        DCD              GPIOP6_Handler 
                                                            ; 122: GPIO Port P6
                                                            
  207 0000022C 00000000        DCD              GPIOP7_Handler 
                                                            ; 123: GPIO Port P7
                                                            
  208 00000230 00000000        DCD              GPIOQ0_Handler ; 124: GPIO Port
                                                             Q (Summary or Q0)
  209 00000234 00000000        DCD              GPIOQ1_Handler 



ARM Macro Assembler    Page 7 


                                                            ; 125: GPIO Port Q1
                                                            
  210 00000238 00000000        DCD              GPIOQ2_Handler 
                                                            ; 126: GPIO Port Q2
                                                            
  211 0000023C 00000000        DCD              GPIOQ3_Handler 
                                                            ; 127: GPIO Port Q3
                                                            
  212 00000240 00000000        DCD              GPIOQ4_Handler 
                                                            ; 128: GPIO Port Q4
                                                            
  213 00000244 00000000        DCD              GPIOQ5_Handler 
                                                            ; 129: GPIO Port Q5
                                                            
  214 00000248 00000000        DCD              GPIOQ6_Handler 
                                                            ; 130: GPIO Port Q6
                                                            
  215 0000024C 00000000        DCD              GPIOQ7_Handler 
                                                            ; 131: GPIO Port Q7
                                                            
  216 00000250 00000000        DCD              GPIOR_Handler 
                                                            ; 132: GPIO Port R
  217 00000254 00000000        DCD              GPIOS_Handler 
                                                            ; 133: GPIO Port S
  218 00000258 00000000        DCD              PMW1_0_Handler ; 134: PWM 1 Gen
                                                            erator 0
  219 0000025C 00000000        DCD              PWM1_1_Handler ; 135: PWM 1 Gen
                                                            erator 1
  220 00000260 00000000        DCD              PWM1_2_Handler ; 136: PWM 1 Gen
                                                            erator 2
  221 00000264 00000000        DCD              PWM1_3_Handler ; 137: PWM 1 Gen
                                                            erator 3
  222 00000268 00000000        DCD              PWM1_FAULT_Handler 
                                                            ; 138: PWM 1 Fault
  223 0000026C         
  224 0000026C         
  225 0000026C                 AREA             |.text|, CODE, READONLY ; Instr
                                                            uctions to be place
                                                            d in ROM
  226 00000000         ;-------------------------------------------------------
                       ------------------------
  227 00000000         ; Reset Handler
  228 00000000         ;-------------------------------------------------------
                       ------------------------
  229 00000000         Reset_Handler
                               PROC
  230 00000000                 IMPORT           __set_control
  231 00000000                 IMPORT           main
  232 00000000                 EXPORT           Reset_Handler
  233 00000000 4824            LDR              R0, =__initial_handler_sp ; Loa
                                                            d the Process Stack
                                                             Pointer
  234 00000002 F380 8809       MSR              PSP, R0     ; (PSP).
  235 00000006 F04F 0003       MOV              R0, #0x3    ; Degrade the Threa
                                                            d mode to be 
  236 0000000A F7FF FFFE       BL               __set_control ; unpriviliged an
                                                            d split the MSP and
                                                             PSP
  237 0000000E 4822            LDR              R0, =main   ; between the two e



ARM Macro Assembler    Page 8 


                                                            xecution modes.
  238 00000010 4700            BX               R0          ; Jump to the the m
                                                            ain method
  239 00000012                 ENDP
  240 00000012         
  241 00000012         
  242 00000012         
  243 00000012         ;-------------------------------------------------------
                       ------------------------
  244 00000012         ; Simple exception handlers. WEAK - imported into other 
                       sources if no other  
  245 00000012         ; source exports an alternative
  246 00000012         ;-------------------------------------------------------
                       ------------------------
  247 00000012         NMI_Handler
                               PROC
  248 00000012                 EXPORT           NMI_Handler               [WEAK
]
  249 00000012 E7FE            B                .
  250 00000014                 ENDP
  252 00000014         HardFault_Handler
                               PROC
  253 00000014                 EXPORT           HardFault_Handler         [WEAK
]
  254 00000014 E7FE            B                .
  255 00000016                 ENDP
  257 00000016         MemManage_Handler
                               PROC
  258 00000016                 EXPORT           MemManage_Handler         [WEAK
]
  259 00000016 E7FE            B                .
  260 00000018                 ENDP
  262 00000018         BusFault_Handler
                               PROC
  263 00000018                 EXPORT           BusFault_Handler          [WEAK
]
  264 00000018 E7FE            B                .
  265 0000001A                 ENDP
  267 0000001A         UsageFault_Handler
                               PROC
  268 0000001A                 EXPORT           UsageFault_Handler        [WEAK
]
  269 0000001A E7FE            B                .
  270 0000001C                 ENDP
  271 0000001C         
  272 0000001C         
  273 0000001C         ;-------------------------------------------------------
                       ------------------------
  274 0000001C         ; Supervisor Call (SVC) Handler
  275 0000001C         ;
  276 0000001C         ; The SVC call handler is split into two parts. The firs
                       t one (written in assembly
  277 0000001C         ; language) checks the value of LR (EXC_RETURN) to figur
                       e out which stack pointer 
  278 0000001C         ; was used before the SVC call was made. Thanks to this 
                       test, we can save the 
  279 0000001C         ; value of the calling 'Thread' (mode) stack pointer reg
                       ardless of the register
  280 0000001C         ; the user program used before (MSP/PSP)



ARM Macro Assembler    Page 9 


  281 0000001C         ;
  282 0000001C         ; Actually the SVC calls are made by user programs which
                        always run in Thread mode, so
  283 0000001C         ; they use PSP as the stack pointer. This means that thi
                       s test is done 'just in case'.
  284 0000001C         ; as it should always be the PSP which is saved before t
                       he SVC call continues and is 
  285 0000001C         ; restored before the SVC Call returns
  286 0000001C         ;-------------------------------------------------------
                       ------------------------     
  287 0000001C         SVC_Handler
                               PROC
  288 0000001C                 IMPORT           scheduler
  289 0000001C                 IMPORT           SVC_Handler_C
  290 0000001C F01E 0F04       TST              LR, #4
  291 00000020 BF0C            ITE              EQ          ; Determine which s
                                                            tack pointer was us
                                                            ed before 
  292 00000022 F3EF 8008       MRSEQ            R0, MSP     ; the SVC call by l
                                                            ooking at bit 2 of
  293 00000026 F3EF 8009       MRSNE            R0, PSP     ; EXC_RETURN (LR)
  294 0000002A 491C            LDR              R1, =scheduler ; Save the EXC_R
                                                            ETURN
  295 0000002C F8C1 E008       STR              LR, [R1, #8]
  296 00000030 F7FF FFFE       BL               SVC_Handler_C
  297 00000034 4919            LDR              R1, =scheduler ; Restore the EX
                                                            C_RETURN so that 
  298 00000036 F8D1 E008       LDR              LR, [R1, #8] ; any changes to t
                                                            he MSP or PSP
  299 0000003A 4770            BX               LR          ; don't propagate t
                                                            o the calling user 
                                                            code
  300 0000003C                 ENDP
  301 0000003C         
  302 0000003C         
  304 0000003C         DebugMon_Handler
                               PROC
  305 0000003C                 EXPORT           DebugMon_Handler          [WEAK
]
  306 0000003C E7FE            B                .
  307 0000003E                 ENDP
  308 0000003E         
  309 0000003E         
  310 0000003E         ;-------------------------------------------------------
                       ------------------------
  311 0000003E         ; PendSV Interrupt Handler
  312 0000003E         ;
  313 0000003E         ; Registers saved by the software (PendSV_Handler):
  314 0000003E         ; +------------+
  315 0000003E         ; | EXC_RETURN | <- Saved SP (orig. SP - 72 bytes), sp i
                       n Task Control Block 
  316 0000003E         ; |  Control   |    initially points here
  317 0000003E         ; |     R8     | 
  318 0000003E         ; |     R9     |
  319 0000003E         ; |     R10    |
  320 0000003E         ; |     R11    |
  321 0000003E         ; |     R4     |
  322 0000003E         ; |     R5     |
  323 0000003E         ; |     R6     |



ARM Macro Assembler    Page 10 


  324 0000003E         ; |     R7     |
  325 0000003E         ; +------------+
  326 0000003E         ;
  327 0000003E         ; Exception frame saved by the NVIC hardware onto stack:
                       
  328 0000003E         ; +------+
  329 0000003E         ; |  R0  | <- SP after entering interrupt (orig. SP - 32
                        bytes)
  330 0000003E         ; |  R1  |
  331 0000003E         ; |  R2  |
  332 0000003E         ; |  R3  |
  333 0000003E         ; |  R12 |
  334 0000003E         ; |  LR  |
  335 0000003E         ; |  PC  |
  336 0000003E         ; | xPSR |
  337 0000003E         ; |      | <- SP before interrupt (orig. SP), bottom of 
                       task's stack
  338 0000003E         ; +------+
  339 0000003E         ;
  340 0000003E         ; At context switch in addition to the registers that ar
                       e saved by NVIC implictly:
  341 0000003E         ; R0-R3, R12, PC, xPSR, the remaining ones: R3-R11 are a
                       lso saved explicitly
  342 0000003E         ; inside the PendSV handler. In addition to all the regi
                       sters mentioned
  343 0000003E         ; before, also the value of CONTROL and EXC_RETURN is sa
                       ved for the currently 
  344 0000003E         ; running task and restored for the task to be run next.
                       
  345 0000003E         ;
  346 0000003E         ; The CONTROL register stores the information about the 
                       access rights 
  347 0000003E         ; priviliged/unpriviliged of the given task. This helps 
                       to distinguish between 
  348 0000003E         ; user (unpriviliged) tasks and the system ones.
  349 0000003E         ;
  350 0000003E         ; The LR (EXC_RETURN) is saved and reloaded too. But the
                        value of its bit 4 
  351 0000003E         ; is used for determining whether the floating-point con
                       text should be saved as well.
  352 0000003E         ; The positive test outcome implies that the currently r
                       unning task performed some
  353 0000003E         ; operations on floatin-point number using FPU hardware 
                       support.
  354 0000003E         ;-------------------------------------------------------
                       ------------------------ 
  355 0000003E         PendSV_Handler
                               PROC
  356 0000003E                 IMPORT           scheduler
  357 0000003E                 EXPORT           PendSV_Handler
  358 0000003E         
  359 0000003E         ; Save current context
  360 0000003E B672            CPSID            I           ; Disable Interrupt
                                                            s
  361 00000040 F3EF 8009       MRS              R0, PSP     ; Get current PSP
  362 00000044 F01E 0F10       TST              LR, #0x10   ; Check if floating
                                                             point context shou
                                                            ld 
  363 00000048 BF08            IT               EQ          ; be saved and save



ARM Macro Assembler    Page 11 


                                                             floating point reg
                                                            isters 
  364 0000004A ED20 8A10       VSTMDBEQ         R0!, {S16-S31} ; if the FPU has
                                                             been used by the l
                                                            ast run task
  365 0000004E 4672            MOV              R2, LR      ; Save the LR, CONT
                                                            ROL and R4-R11 regi
                                                            sters
  366 00000050 F3EF 8314       MRS              R3, CONTROL
  367 00000054 E920 0FFC       STMDB            R0!, {R2-R11}
  368 00000058 4A10            LDR              R2, =scheduler ; Now only the s
                                                            tack pointer value,
                                                             after all
  369 0000005A 6811            LDR              R1, [R2]    ; context saving, r
                                                            emains to be saved 
                                                            inside
  370 0000005C 6008            STR              R0, [R1]    ; task's metadata r
                                                            unPtr->sp = R0
  371 0000005E         
  372 0000005E         ; Load next context
  373 0000005E 6853            LDR              R3, [R2, #4] ; Load the pointer
                                                             to the next task t
                                                            o run
  374 00000060 6818            LDR              R0, [R3]    ; Load the SP of th
                                                            e next task R0 = sc
                                                            heduler->topPrioTas
                                                            k->sp
  375 00000062 6013            STR              R3, [R2]    ; scheduler->runPtr
                                                             = scheduler->topPr
                                                            ioTask
  376 00000064 E8B0 0FFC       LDMIA            R0!, {R2-R11} ; Restore the val
                                                            ues of LR, CONTROL 
                                                            and R4-R11 
  377 00000068 4696            MOV              LR, R2      ; from the task's p
                                                            rivate stack
  378 0000006A F383 8814       MSR              CONTROL, R3 ; Reload the execut
                                                            ion mode (
  379 0000006E F3BF 8F6F       ISB
  380 00000072 F01E 0F10       TST              LR, #0x10
  381 00000076 BF08            IT               EQ          ; Test bit 4. If ze
                                                            ro, need to unstack
                                                             
  382 00000078 ECB0 8A10       VLDMIAEQ         R0!, {S16-S31} ; floating point
                                                             registers
  383 0000007C F380 8809       MSR              PSP, R0     ; Set PSP to next t
                                                            ask's stack pointer
                                                            
  384 00000080 B662            CPSIE            I           ; Re-enable Interru
                                                            pts 
  385 00000082 4770            BX               LR          ; return
  386 00000084                 ENDP
  387 00000084         
  388 00000084         
  390 00000084         SysTick_Handler
                               PROC
  391 00000084                 EXPORT           SysTick_Handler           [WEAK
]
  392 00000084 E7FE            B                .
  393 00000086                 ENDP



ARM Macro Assembler    Page 12 


  394 00000086         
  395 00000086         
  396 00000086         ;-------------------------------------------------------
                       ------------------------
  397 00000086         ; External interrupt handlers. WEAK - imported into othe
                       r sources if no other  
  398 00000086         ; source exports an alternative
  399 00000086         ;-------------------------------------------------------
                       ------------------------
  400 00000086         Default_Handler
                               PROC
  401 00000086         
  402 00000086                 EXPORT           GPIOA_Handler [WEAK]
  403 00000086                 EXPORT           GPIOB_Handler [WEAK]
  404 00000086                 EXPORT           GPIOC_Handler [WEAK]
  405 00000086                 EXPORT           GPIOD_Handler [WEAK]
  406 00000086                 EXPORT           GPIOE_Handler [WEAK]
  407 00000086                 EXPORT           UART0_Handler [WEAK]
  408 00000086                 EXPORT           UART1_Handler [WEAK]
  409 00000086                 EXPORT           SSI0_Handler [WEAK]
  410 00000086                 EXPORT           I2C0_Handler [WEAK]
  411 00000086                 EXPORT           PMW0_FAULT_Handler [WEAK]
  412 00000086                 EXPORT           PWM0_0_Handler [WEAK]
  413 00000086                 EXPORT           PWM0_1_Handler [WEAK]
  414 00000086                 EXPORT           PWM0_2_Handler [WEAK]
  415 00000086                 EXPORT           QEI0_Handler [WEAK]
  416 00000086                 EXPORT           ADC0SS0_Handler [WEAK]
  417 00000086                 EXPORT           ADC0SS1_Handler [WEAK]
  418 00000086                 EXPORT           ADC0SS2_Handler [WEAK]
  419 00000086                 EXPORT           ADC0SS3_Handler [WEAK]
  420 00000086                 EXPORT           WDT0_Handler [WEAK]
  421 00000086                 EXPORT           TIMER0A_Handler [WEAK]
  422 00000086                 EXPORT           TIMER0B_Handler [WEAK]
  423 00000086                 EXPORT           TIMER1A_Handler [WEAK]
  424 00000086                 EXPORT           TIMER1B_Handler [WEAK]
  425 00000086                 EXPORT           TIMER2A_Handler [WEAK]
  426 00000086                 EXPORT           TIMER2B_Handler [WEAK]
  427 00000086                 EXPORT           COMP0_Handler [WEAK]
  428 00000086                 EXPORT           COMP1_Handler [WEAK]
  429 00000086                 EXPORT           COMP2_Handler [WEAK]
  430 00000086                 EXPORT           SYSCTL_Handler [WEAK]
  431 00000086                 EXPORT           FLASH_Handler [WEAK]
  432 00000086                 EXPORT           GPIOF_Handler [WEAK]
  433 00000086                 EXPORT           GPIOG_Handler [WEAK]
  434 00000086                 EXPORT           GPIOH_Handler [WEAK]
  435 00000086                 EXPORT           UART2_Handler [WEAK]
  436 00000086                 EXPORT           SSI1_Handler [WEAK]
  437 00000086                 EXPORT           TIMER3A_Handler [WEAK]
  438 00000086                 EXPORT           TIMER3B_Handler [WEAK]
  439 00000086                 EXPORT           I2C1_Handler [WEAK]
  440 00000086                 EXPORT           QEI1_Handler [WEAK]
  441 00000086                 EXPORT           CAN0_Handler [WEAK]
  442 00000086                 EXPORT           CAN1_Handler [WEAK]
  443 00000086                 EXPORT           CAN2_Handler [WEAK]
  444 00000086                 EXPORT           HIB_Handler [WEAK]
  445 00000086                 EXPORT           USB0_Handler [WEAK]
  446 00000086                 EXPORT           PWM0_3_Handler [WEAK]
  447 00000086                 EXPORT           UDMA_Handler [WEAK]
  448 00000086                 EXPORT           UDMAERR_Handler [WEAK]



ARM Macro Assembler    Page 13 


  449 00000086                 EXPORT           ADC1SS0_Handler [WEAK]
  450 00000086                 EXPORT           ADC1SS1_Handler [WEAK]
  451 00000086                 EXPORT           ADC1SS2_Handler [WEAK]
  452 00000086                 EXPORT           ADC1SS3_Handler [WEAK]
  453 00000086                 EXPORT           GPIOJ_Handler [WEAK]
  454 00000086                 EXPORT           GPIOK_Handler [WEAK]
  455 00000086                 EXPORT           GPIOL_Handler [WEAK]
  456 00000086                 EXPORT           SSI2_Handler [WEAK]
  457 00000086                 EXPORT           SSI3_Handler [WEAK]
  458 00000086                 EXPORT           UART3_Handler [WEAK]
  459 00000086                 EXPORT           UART4_Handler [WEAK]
  460 00000086                 EXPORT           UART5_Handler [WEAK]
  461 00000086                 EXPORT           UART6_Handler [WEAK]
  462 00000086                 EXPORT           UART7_Handler [WEAK]
  463 00000086                 EXPORT           I2C2_Handler [WEAK]
  464 00000086                 EXPORT           I2C3_Handler [WEAK]
  465 00000086                 EXPORT           TIMER4A_Handler [WEAK]
  466 00000086                 EXPORT           TIMER4B_Handler [WEAK]
  467 00000086                 EXPORT           TIMER5A_Handler [WEAK]
  468 00000086                 EXPORT           TIMER5B_Handler [WEAK]
  469 00000086                 EXPORT           WTIMER0A_Handler [WEAK]
  470 00000086                 EXPORT           WTIMER0B_Handler [WEAK]
  471 00000086                 EXPORT           WTIMER1A_Handler [WEAK]
  472 00000086                 EXPORT           WTIMER1B_Handler [WEAK]
  473 00000086                 EXPORT           WTIMER2A_Handler [WEAK]
  474 00000086                 EXPORT           WTIMER2B_Handler [WEAK]
  475 00000086                 EXPORT           WTIMER3A_Handler [WEAK]
  476 00000086                 EXPORT           WTIMER3B_Handler [WEAK]
  477 00000086                 EXPORT           WTIMER4A_Handler [WEAK]
  478 00000086                 EXPORT           WTIMER4B_Handler [WEAK]
  479 00000086                 EXPORT           WTIMER5A_Handler [WEAK]
  480 00000086                 EXPORT           WTIMER5B_Handler [WEAK]
  481 00000086                 EXPORT           FPU_Handler [WEAK]
  482 00000086                 EXPORT           I2C4_Handler [WEAK]
  483 00000086                 EXPORT           I2C5_Handler [WEAK]
  484 00000086                 EXPORT           GPIOM_Handler [WEAK]
  485 00000086                 EXPORT           GPION_Handler [WEAK]
  486 00000086                 EXPORT           QEI2_Handler [WEAK]
  487 00000086                 EXPORT           GPIOP0_Handler [WEAK]
  488 00000086                 EXPORT           GPIOP1_Handler [WEAK]
  489 00000086                 EXPORT           GPIOP2_Handler [WEAK]
  490 00000086                 EXPORT           GPIOP3_Handler [WEAK]
  491 00000086                 EXPORT           GPIOP4_Handler [WEAK]
  492 00000086                 EXPORT           GPIOP5_Handler [WEAK]
  493 00000086                 EXPORT           GPIOP6_Handler [WEAK]
  494 00000086                 EXPORT           GPIOP7_Handler [WEAK]
  495 00000086                 EXPORT           GPIOQ0_Handler [WEAK]
  496 00000086                 EXPORT           GPIOQ1_Handler [WEAK]
  497 00000086                 EXPORT           GPIOQ2_Handler [WEAK]
  498 00000086                 EXPORT           GPIOQ3_Handler [WEAK]
  499 00000086                 EXPORT           GPIOQ4_Handler [WEAK]
  500 00000086                 EXPORT           GPIOQ5_Handler [WEAK]
  501 00000086                 EXPORT           GPIOQ6_Handler [WEAK]
  502 00000086                 EXPORT           GPIOQ7_Handler [WEAK]
  503 00000086                 EXPORT           GPIOR_Handler [WEAK]
  504 00000086                 EXPORT           GPIOS_Handler [WEAK]
  505 00000086                 EXPORT           PMW1_0_Handler [WEAK]
  506 00000086                 EXPORT           PWM1_1_Handler [WEAK]
  507 00000086                 EXPORT           PWM1_2_Handler [WEAK]



ARM Macro Assembler    Page 14 


  508 00000086                 EXPORT           PWM1_3_Handler [WEAK]
  509 00000086                 EXPORT           PWM1_FAULT_Handler [WEAK]
  510 00000086         
  511 00000086         
  512 00000086         GPIOA_Handler
  513 00000086         GPIOB_Handler
  514 00000086         GPIOC_Handler
  515 00000086         GPIOD_Handler
  516 00000086         GPIOE_Handler
  517 00000086         UART0_Handler
  518 00000086         UART1_Handler
  519 00000086         SSI0_Handler
  520 00000086         I2C0_Handler
  521 00000086         PMW0_FAULT_Handler
  522 00000086         PWM0_0_Handler
  523 00000086         PWM0_1_Handler
  524 00000086         PWM0_2_Handler
  525 00000086         QEI0_Handler
  526 00000086         ADC0SS0_Handler
  527 00000086         ADC0SS1_Handler
  528 00000086         ADC0SS2_Handler
  529 00000086         ADC0SS3_Handler
  530 00000086         WDT0_Handler
  531 00000086         TIMER0A_Handler
  532 00000086         TIMER0B_Handler
  533 00000086         TIMER1A_Handler
  534 00000086         TIMER1B_Handler
  535 00000086         TIMER2A_Handler
  536 00000086         TIMER2B_Handler
  537 00000086         COMP0_Handler
  538 00000086         COMP1_Handler
  539 00000086         COMP2_Handler
  540 00000086         SYSCTL_Handler
  541 00000086         FLASH_Handler
  542 00000086         GPIOF_Handler
  543 00000086         GPIOG_Handler
  544 00000086         GPIOH_Handler
  545 00000086         UART2_Handler
  546 00000086         SSI1_Handler
  547 00000086         TIMER3A_Handler
  548 00000086         TIMER3B_Handler
  549 00000086         I2C1_Handler
  550 00000086         QEI1_Handler
  551 00000086         CAN0_Handler
  552 00000086         CAN1_Handler
  553 00000086         CAN2_Handler
  554 00000086         HIB_Handler
  555 00000086         USB0_Handler
  556 00000086         PWM0_3_Handler
  557 00000086         UDMA_Handler
  558 00000086         UDMAERR_Handler
  559 00000086         ADC1SS0_Handler
  560 00000086         ADC1SS1_Handler
  561 00000086         ADC1SS2_Handler
  562 00000086         ADC1SS3_Handler
  563 00000086         GPIOJ_Handler
  564 00000086         GPIOK_Handler
  565 00000086         GPIOL_Handler
  566 00000086         SSI2_Handler



ARM Macro Assembler    Page 15 


  567 00000086         SSI3_Handler
  568 00000086         UART3_Handler
  569 00000086         UART4_Handler
  570 00000086         UART5_Handler
  571 00000086         UART6_Handler
  572 00000086         UART7_Handler
  573 00000086         I2C2_Handler
  574 00000086         I2C3_Handler
  575 00000086         TIMER4A_Handler
  576 00000086         TIMER4B_Handler
  577 00000086         TIMER5A_Handler
  578 00000086         TIMER5B_Handler
  579 00000086         WTIMER0A_Handler
  580 00000086         WTIMER0B_Handler
  581 00000086         WTIMER1A_Handler
  582 00000086         WTIMER1B_Handler
  583 00000086         WTIMER2A_Handler
  584 00000086         WTIMER2B_Handler
  585 00000086         WTIMER3A_Handler
  586 00000086         WTIMER3B_Handler
  587 00000086         WTIMER4A_Handler
  588 00000086         WTIMER4B_Handler
  589 00000086         WTIMER5A_Handler
  590 00000086         WTIMER5B_Handler
  591 00000086         FPU_Handler
  592 00000086         I2C4_Handler
  593 00000086         I2C5_Handler
  594 00000086         GPIOM_Handler
  595 00000086         GPION_Handler
  596 00000086         QEI2_Handler
  597 00000086         GPIOP0_Handler
  598 00000086         GPIOP1_Handler
  599 00000086         GPIOP2_Handler
  600 00000086         GPIOP3_Handler
  601 00000086         GPIOP4_Handler
  602 00000086         GPIOP5_Handler
  603 00000086         GPIOP6_Handler
  604 00000086         GPIOP7_Handler
  605 00000086         GPIOQ0_Handler
  606 00000086         GPIOQ1_Handler
  607 00000086         GPIOQ2_Handler
  608 00000086         GPIOQ3_Handler
  609 00000086         GPIOQ4_Handler
  610 00000086         GPIOQ5_Handler
  611 00000086         GPIOQ6_Handler
  612 00000086         GPIOQ7_Handler
  613 00000086         GPIOR_Handler
  614 00000086         GPIOS_Handler
  615 00000086         PMW1_0_Handler
  616 00000086         PWM1_1_Handler
  617 00000086         PWM1_2_Handler
  618 00000086         PWM1_3_Handler
  619 00000086         PWM1_FAULT_Handler
  620 00000086 E7FE            B                .
  621 00000088                 ENDP
  622 00000088         
  623 00000088         
  624 00000088         ;-------------------------------------------------------
                       ------------------------



ARM Macro Assembler    Page 16 


  625 00000088         ; Function:     __user_initial_stackheap
  626 00000088         ; Purpose:     Retarget the heap and stack memory. Retur
                       ns the heap and the Handler 
  627 00000088         ;    mode stack memory space range addresses. Implementi
                       ng this function
  628 00000088         ;    is necessary when semihosting is switched off.
  629 00000088         ; Arguments: -
  630 00000088         ; Returns:   
  631 00000088         ;  R0 - heap base address
  632 00000088         ;   R1 - stack limit address
  633 00000088         ;  R2 - heap limit address
  634 00000088         ;   R3 - stack base address
  635 00000088         ;-------------------------------------------------------
                       ------------------------ 
  636 00000088                 IMPORT           __use_two_region_memory
  637 00000088                 EXPORT           __user_initial_stackheap
  639 00000088         __user_initial_stackheap
                               PROC
  640 00000088 4805            LDR              R0, =  Heap_Mem
  641 0000008A 4906            LDR              R1, = (Handler_Stack + Handler_
Stack_Size)
  642 0000008C 4A04            LDR              R2, = (Heap_Mem + Heap_Size)
  643 0000008E 4B06            LDR              R3, = Handler_Stack
  644 00000090 4770            BX               LR
  645 00000092                 ENDP
  646 00000092         
  647 00000092 00 00           ALIGN
  648 00000094                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\startup.d -o.\objects\startup.o -I"C:\Users\Krzysztof
 Koch\Documents\KrisRTOS\RTE" -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 520" --predefine="TM4C123GH6PM SETA 1" --list=.
\listings\startup.lst "src\HAL & Drivers\startup.s"



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Handler_Stack 00000000

Symbol: Handler_Stack
   Definitions
      At line 34 in file src\HAL
   Uses
      At line 641 in file src\HAL
      At line 643 in file src\HAL

STACK 00000000

Symbol: STACK
   Definitions
      At line 32 in file src\HAL
   Uses
      None
Comment: STACK unused
Thread_Stack 00000200

Symbol: Thread_Stack
   Definitions
      At line 37 in file src\HAL
   Uses
      None
Comment: Thread_Stack unused
__initial_handler_sp 00000200

Symbol: __initial_handler_sp
   Definitions
      At line 35 in file src\HAL
   Uses
      At line 233 in file src\HAL
Comment: __initial_handler_sp used once
__initial_sp 00000300

Symbol: __initial_sp
   Definitions
      At line 38 in file src\HAL
   Uses
      At line 66 in file src\HAL
Comment: __initial_sp used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 51 in file src\HAL
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 52 in file src\HAL
   Uses
      At line 640 in file src\HAL
      At line 642 in file src\HAL

__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 53 in file src\HAL
   Uses
      None
Comment: __heap_limit unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 62 in file src\HAL
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 66 in file src\HAL
   Uses
      At line 65 in file src\HAL
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 225 in file src\HAL
   Uses
      None
Comment: .text unused
ADC0SS0_Handler 00000086

Symbol: ADC0SS0_Handler
   Definitions
      At line 526 in file src\HAL
   Uses
      At line 98 in file src\HAL
      At line 416 in file src\HAL

ADC0SS1_Handler 00000086

Symbol: ADC0SS1_Handler
   Definitions
      At line 527 in file src\HAL
   Uses
      At line 99 in file src\HAL
      At line 417 in file src\HAL

ADC0SS2_Handler 00000086

Symbol: ADC0SS2_Handler
   Definitions
      At line 528 in file src\HAL
   Uses
      At line 100 in file src\HAL
      At line 418 in file src\HAL

ADC0SS3_Handler 00000086

Symbol: ADC0SS3_Handler
   Definitions
      At line 529 in file src\HAL
   Uses
      At line 101 in file src\HAL
      At line 419 in file src\HAL

ADC1SS0_Handler 00000086

Symbol: ADC1SS0_Handler
   Definitions
      At line 559 in file src\HAL
   Uses
      At line 132 in file src\HAL
      At line 449 in file src\HAL

ADC1SS1_Handler 00000086

Symbol: ADC1SS1_Handler
   Definitions
      At line 560 in file src\HAL
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 133 in file src\HAL
      At line 450 in file src\HAL

ADC1SS2_Handler 00000086

Symbol: ADC1SS2_Handler
   Definitions
      At line 561 in file src\HAL
   Uses
      At line 134 in file src\HAL
      At line 451 in file src\HAL

ADC1SS3_Handler 00000086

Symbol: ADC1SS3_Handler
   Definitions
      At line 562 in file src\HAL
   Uses
      At line 135 in file src\HAL
      At line 452 in file src\HAL

BusFault_Handler 00000018

Symbol: BusFault_Handler
   Definitions
      At line 262 in file src\HAL
   Uses
      At line 71 in file src\HAL
      At line 263 in file src\HAL

CAN0_Handler 00000086

Symbol: CAN0_Handler
   Definitions
      At line 551 in file src\HAL
   Uses
      At line 123 in file src\HAL
      At line 441 in file src\HAL

CAN1_Handler 00000086

Symbol: CAN1_Handler
   Definitions
      At line 552 in file src\HAL
   Uses
      At line 124 in file src\HAL
      At line 442 in file src\HAL

CAN2_Handler 00000086

Symbol: CAN2_Handler
   Definitions
      At line 553 in file src\HAL
   Uses
      At line 125 in file src\HAL
      At line 443 in file src\HAL

COMP0_Handler 00000086




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: COMP0_Handler
   Definitions
      At line 537 in file src\HAL
   Uses
      At line 109 in file src\HAL
      At line 427 in file src\HAL

COMP1_Handler 00000086

Symbol: COMP1_Handler
   Definitions
      At line 538 in file src\HAL
   Uses
      At line 110 in file src\HAL
      At line 428 in file src\HAL

COMP2_Handler 00000086

Symbol: COMP2_Handler
   Definitions
      At line 539 in file src\HAL
   Uses
      At line 111 in file src\HAL
      At line 429 in file src\HAL

DebugMon_Handler 0000003C

Symbol: DebugMon_Handler
   Definitions
      At line 304 in file src\HAL
   Uses
      At line 78 in file src\HAL
      At line 305 in file src\HAL

Default_Handler 00000086

Symbol: Default_Handler
   Definitions
      At line 400 in file src\HAL
   Uses
      None
Comment: Default_Handler unused
FLASH_Handler 00000086

Symbol: FLASH_Handler
   Definitions
      At line 541 in file src\HAL
   Uses
      At line 113 in file src\HAL
      At line 431 in file src\HAL

FPU_Handler 00000086

Symbol: FPU_Handler
   Definitions
      At line 591 in file src\HAL
   Uses
      At line 190 in file src\HAL
      At line 481 in file src\HAL



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


GPIOA_Handler 00000086

Symbol: GPIOA_Handler
   Definitions
      At line 512 in file src\HAL
   Uses
      At line 84 in file src\HAL
      At line 402 in file src\HAL

GPIOB_Handler 00000086

Symbol: GPIOB_Handler
   Definitions
      At line 513 in file src\HAL
   Uses
      At line 85 in file src\HAL
      At line 403 in file src\HAL

GPIOC_Handler 00000086

Symbol: GPIOC_Handler
   Definitions
      At line 514 in file src\HAL
   Uses
      At line 86 in file src\HAL
      At line 404 in file src\HAL

GPIOD_Handler 00000086

Symbol: GPIOD_Handler
   Definitions
      At line 515 in file src\HAL
   Uses
      At line 87 in file src\HAL
      At line 405 in file src\HAL

GPIOE_Handler 00000086

Symbol: GPIOE_Handler
   Definitions
      At line 516 in file src\HAL
   Uses
      At line 88 in file src\HAL
      At line 406 in file src\HAL

GPIOF_Handler 00000086

Symbol: GPIOF_Handler
   Definitions
      At line 542 in file src\HAL
   Uses
      At line 114 in file src\HAL
      At line 432 in file src\HAL

GPIOG_Handler 00000086

Symbol: GPIOG_Handler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 543 in file src\HAL
   Uses
      At line 115 in file src\HAL
      At line 433 in file src\HAL

GPIOH_Handler 00000086

Symbol: GPIOH_Handler
   Definitions
      At line 544 in file src\HAL
   Uses
      At line 116 in file src\HAL
      At line 434 in file src\HAL

GPIOJ_Handler 00000086

Symbol: GPIOJ_Handler
   Definitions
      At line 563 in file src\HAL
   Uses
      At line 138 in file src\HAL
      At line 453 in file src\HAL

GPIOK_Handler 00000086

Symbol: GPIOK_Handler
   Definitions
      At line 564 in file src\HAL
   Uses
      At line 139 in file src\HAL
      At line 454 in file src\HAL

GPIOL_Handler 00000086

Symbol: GPIOL_Handler
   Definitions
      At line 565 in file src\HAL
   Uses
      At line 140 in file src\HAL
      At line 455 in file src\HAL

GPIOM_Handler 00000086

Symbol: GPIOM_Handler
   Definitions
      At line 594 in file src\HAL
   Uses
      At line 195 in file src\HAL
      At line 484 in file src\HAL

GPION_Handler 00000086

Symbol: GPION_Handler
   Definitions
      At line 595 in file src\HAL
   Uses
      At line 196 in file src\HAL
      At line 485 in file src\HAL




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

GPIOP0_Handler 00000086

Symbol: GPIOP0_Handler
   Definitions
      At line 597 in file src\HAL
   Uses
      At line 200 in file src\HAL
      At line 487 in file src\HAL

GPIOP1_Handler 00000086

Symbol: GPIOP1_Handler
   Definitions
      At line 598 in file src\HAL
   Uses
      At line 201 in file src\HAL
      At line 488 in file src\HAL

GPIOP2_Handler 00000086

Symbol: GPIOP2_Handler
   Definitions
      At line 599 in file src\HAL
   Uses
      At line 202 in file src\HAL
      At line 489 in file src\HAL

GPIOP3_Handler 00000086

Symbol: GPIOP3_Handler
   Definitions
      At line 600 in file src\HAL
   Uses
      At line 203 in file src\HAL
      At line 490 in file src\HAL

GPIOP4_Handler 00000086

Symbol: GPIOP4_Handler
   Definitions
      At line 601 in file src\HAL
   Uses
      At line 204 in file src\HAL
      At line 491 in file src\HAL

GPIOP5_Handler 00000086

Symbol: GPIOP5_Handler
   Definitions
      At line 602 in file src\HAL
   Uses
      At line 205 in file src\HAL
      At line 492 in file src\HAL

GPIOP6_Handler 00000086

Symbol: GPIOP6_Handler
   Definitions
      At line 603 in file src\HAL



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 206 in file src\HAL
      At line 493 in file src\HAL

GPIOP7_Handler 00000086

Symbol: GPIOP7_Handler
   Definitions
      At line 604 in file src\HAL
   Uses
      At line 207 in file src\HAL
      At line 494 in file src\HAL

GPIOQ0_Handler 00000086

Symbol: GPIOQ0_Handler
   Definitions
      At line 605 in file src\HAL
   Uses
      At line 208 in file src\HAL
      At line 495 in file src\HAL

GPIOQ1_Handler 00000086

Symbol: GPIOQ1_Handler
   Definitions
      At line 606 in file src\HAL
   Uses
      At line 209 in file src\HAL
      At line 496 in file src\HAL

GPIOQ2_Handler 00000086

Symbol: GPIOQ2_Handler
   Definitions
      At line 607 in file src\HAL
   Uses
      At line 210 in file src\HAL
      At line 497 in file src\HAL

GPIOQ3_Handler 00000086

Symbol: GPIOQ3_Handler
   Definitions
      At line 608 in file src\HAL
   Uses
      At line 211 in file src\HAL
      At line 498 in file src\HAL

GPIOQ4_Handler 00000086

Symbol: GPIOQ4_Handler
   Definitions
      At line 609 in file src\HAL
   Uses
      At line 212 in file src\HAL
      At line 499 in file src\HAL

GPIOQ5_Handler 00000086



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: GPIOQ5_Handler
   Definitions
      At line 610 in file src\HAL
   Uses
      At line 213 in file src\HAL
      At line 500 in file src\HAL

GPIOQ6_Handler 00000086

Symbol: GPIOQ6_Handler
   Definitions
      At line 611 in file src\HAL
   Uses
      At line 214 in file src\HAL
      At line 501 in file src\HAL

GPIOQ7_Handler 00000086

Symbol: GPIOQ7_Handler
   Definitions
      At line 612 in file src\HAL
   Uses
      At line 215 in file src\HAL
      At line 502 in file src\HAL

GPIOR_Handler 00000086

Symbol: GPIOR_Handler
   Definitions
      At line 613 in file src\HAL
   Uses
      At line 216 in file src\HAL
      At line 503 in file src\HAL

GPIOS_Handler 00000086

Symbol: GPIOS_Handler
   Definitions
      At line 614 in file src\HAL
   Uses
      At line 217 in file src\HAL
      At line 504 in file src\HAL

HIB_Handler 00000086

Symbol: HIB_Handler
   Definitions
      At line 554 in file src\HAL
   Uses
      At line 127 in file src\HAL
      At line 444 in file src\HAL

HardFault_Handler 00000014

Symbol: HardFault_Handler
   Definitions
      At line 252 in file src\HAL
   Uses



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

      At line 69 in file src\HAL
      At line 253 in file src\HAL

I2C0_Handler 00000086

Symbol: I2C0_Handler
   Definitions
      At line 520 in file src\HAL
   Uses
      At line 92 in file src\HAL
      At line 410 in file src\HAL

I2C1_Handler 00000086

Symbol: I2C1_Handler
   Definitions
      At line 549 in file src\HAL
   Uses
      At line 121 in file src\HAL
      At line 439 in file src\HAL

I2C2_Handler 00000086

Symbol: I2C2_Handler
   Definitions
      At line 573 in file src\HAL
   Uses
      At line 152 in file src\HAL
      At line 463 in file src\HAL

I2C3_Handler 00000086

Symbol: I2C3_Handler
   Definitions
      At line 574 in file src\HAL
   Uses
      At line 153 in file src\HAL
      At line 464 in file src\HAL

I2C4_Handler 00000086

Symbol: I2C4_Handler
   Definitions
      At line 592 in file src\HAL
   Uses
      At line 193 in file src\HAL
      At line 482 in file src\HAL

I2C5_Handler 00000086

Symbol: I2C5_Handler
   Definitions
      At line 593 in file src\HAL
   Uses
      At line 194 in file src\HAL
      At line 483 in file src\HAL

MemManage_Handler 00000016




ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

Symbol: MemManage_Handler
   Definitions
      At line 257 in file src\HAL
   Uses
      At line 70 in file src\HAL
      At line 258 in file src\HAL

NMI_Handler 00000012

Symbol: NMI_Handler
   Definitions
      At line 247 in file src\HAL
   Uses
      At line 68 in file src\HAL
      At line 248 in file src\HAL

PMW0_FAULT_Handler 00000086

Symbol: PMW0_FAULT_Handler
   Definitions
      At line 521 in file src\HAL
   Uses
      At line 93 in file src\HAL
      At line 411 in file src\HAL

PMW1_0_Handler 00000086

Symbol: PMW1_0_Handler
   Definitions
      At line 615 in file src\HAL
   Uses
      At line 218 in file src\HAL
      At line 505 in file src\HAL

PWM0_0_Handler 00000086

Symbol: PWM0_0_Handler
   Definitions
      At line 522 in file src\HAL
   Uses
      At line 94 in file src\HAL
      At line 412 in file src\HAL

PWM0_1_Handler 00000086

Symbol: PWM0_1_Handler
   Definitions
      At line 523 in file src\HAL
   Uses
      At line 95 in file src\HAL
      At line 413 in file src\HAL

PWM0_2_Handler 00000086

Symbol: PWM0_2_Handler
   Definitions
      At line 524 in file src\HAL
   Uses
      At line 96 in file src\HAL



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Relocatable symbols

      At line 414 in file src\HAL

PWM0_3_Handler 00000086

Symbol: PWM0_3_Handler
   Definitions
      At line 556 in file src\HAL
   Uses
      At line 129 in file src\HAL
      At line 446 in file src\HAL

PWM1_1_Handler 00000086

Symbol: PWM1_1_Handler
   Definitions
      At line 616 in file src\HAL
   Uses
      At line 219 in file src\HAL
      At line 506 in file src\HAL

PWM1_2_Handler 00000086

Symbol: PWM1_2_Handler
   Definitions
      At line 617 in file src\HAL
   Uses
      At line 220 in file src\HAL
      At line 507 in file src\HAL

PWM1_3_Handler 00000086

Symbol: PWM1_3_Handler
   Definitions
      At line 618 in file src\HAL
   Uses
      At line 221 in file src\HAL
      At line 508 in file src\HAL

PWM1_FAULT_Handler 00000086

Symbol: PWM1_FAULT_Handler
   Definitions
      At line 619 in file src\HAL
   Uses
      At line 222 in file src\HAL
      At line 509 in file src\HAL

PendSV_Handler 0000003E

Symbol: PendSV_Handler
   Definitions
      At line 355 in file src\HAL
   Uses
      At line 80 in file src\HAL
      At line 357 in file src\HAL

QEI0_Handler 00000086

Symbol: QEI0_Handler



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 525 in file src\HAL
   Uses
      At line 97 in file src\HAL
      At line 415 in file src\HAL

QEI1_Handler 00000086

Symbol: QEI1_Handler
   Definitions
      At line 550 in file src\HAL
   Uses
      At line 122 in file src\HAL
      At line 440 in file src\HAL

QEI2_Handler 00000086

Symbol: QEI2_Handler
   Definitions
      At line 596 in file src\HAL
   Uses
      At line 197 in file src\HAL
      At line 486 in file src\HAL

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 229 in file src\HAL
   Uses
      At line 67 in file src\HAL
      At line 232 in file src\HAL

SSI0_Handler 00000086

Symbol: SSI0_Handler
   Definitions
      At line 519 in file src\HAL
   Uses
      At line 91 in file src\HAL
      At line 409 in file src\HAL

SSI1_Handler 00000086

Symbol: SSI1_Handler
   Definitions
      At line 546 in file src\HAL
   Uses
      At line 118 in file src\HAL
      At line 436 in file src\HAL

SSI2_Handler 00000086

Symbol: SSI2_Handler
   Definitions
      At line 566 in file src\HAL
   Uses
      At line 141 in file src\HAL
      At line 456 in file src\HAL



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Relocatable symbols


SSI3_Handler 00000086

Symbol: SSI3_Handler
   Definitions
      At line 567 in file src\HAL
   Uses
      At line 142 in file src\HAL
      At line 457 in file src\HAL

SVC_Handler 0000001C

Symbol: SVC_Handler
   Definitions
      At line 287 in file src\HAL
   Uses
      At line 77 in file src\HAL
Comment: SVC_Handler used once
SYSCTL_Handler 00000086

Symbol: SYSCTL_Handler
   Definitions
      At line 540 in file src\HAL
   Uses
      At line 112 in file src\HAL
      At line 430 in file src\HAL

SysTick_Handler 00000084

Symbol: SysTick_Handler
   Definitions
      At line 390 in file src\HAL
   Uses
      At line 81 in file src\HAL
      At line 391 in file src\HAL

TIMER0A_Handler 00000086

Symbol: TIMER0A_Handler
   Definitions
      At line 531 in file src\HAL
   Uses
      At line 103 in file src\HAL
      At line 421 in file src\HAL

TIMER0B_Handler 00000086

Symbol: TIMER0B_Handler
   Definitions
      At line 532 in file src\HAL
   Uses
      At line 104 in file src\HAL
      At line 422 in file src\HAL

TIMER1A_Handler 00000086

Symbol: TIMER1A_Handler
   Definitions
      At line 533 in file src\HAL



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 105 in file src\HAL
      At line 423 in file src\HAL

TIMER1B_Handler 00000086

Symbol: TIMER1B_Handler
   Definitions
      At line 534 in file src\HAL
   Uses
      At line 106 in file src\HAL
      At line 424 in file src\HAL

TIMER2A_Handler 00000086

Symbol: TIMER2A_Handler
   Definitions
      At line 535 in file src\HAL
   Uses
      At line 107 in file src\HAL
      At line 425 in file src\HAL

TIMER2B_Handler 00000086

Symbol: TIMER2B_Handler
   Definitions
      At line 536 in file src\HAL
   Uses
      At line 108 in file src\HAL
      At line 426 in file src\HAL

TIMER3A_Handler 00000086

Symbol: TIMER3A_Handler
   Definitions
      At line 547 in file src\HAL
   Uses
      At line 119 in file src\HAL
      At line 437 in file src\HAL

TIMER3B_Handler 00000086

Symbol: TIMER3B_Handler
   Definitions
      At line 548 in file src\HAL
   Uses
      At line 120 in file src\HAL
      At line 438 in file src\HAL

TIMER4A_Handler 00000086

Symbol: TIMER4A_Handler
   Definitions
      At line 575 in file src\HAL
   Uses
      At line 154 in file src\HAL
      At line 465 in file src\HAL

TIMER4B_Handler 00000086



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Relocatable symbols


Symbol: TIMER4B_Handler
   Definitions
      At line 576 in file src\HAL
   Uses
      At line 155 in file src\HAL
      At line 466 in file src\HAL

TIMER5A_Handler 00000086

Symbol: TIMER5A_Handler
   Definitions
      At line 577 in file src\HAL
   Uses
      At line 176 in file src\HAL
      At line 467 in file src\HAL

TIMER5B_Handler 00000086

Symbol: TIMER5B_Handler
   Definitions
      At line 578 in file src\HAL
   Uses
      At line 177 in file src\HAL
      At line 468 in file src\HAL

UART0_Handler 00000086

Symbol: UART0_Handler
   Definitions
      At line 517 in file src\HAL
   Uses
      At line 89 in file src\HAL
      At line 407 in file src\HAL

UART1_Handler 00000086

Symbol: UART1_Handler
   Definitions
      At line 518 in file src\HAL
   Uses
      At line 90 in file src\HAL
      At line 408 in file src\HAL

UART2_Handler 00000086

Symbol: UART2_Handler
   Definitions
      At line 545 in file src\HAL
   Uses
      At line 117 in file src\HAL
      At line 435 in file src\HAL

UART3_Handler 00000086

Symbol: UART3_Handler
   Definitions
      At line 568 in file src\HAL
   Uses



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Relocatable symbols

      At line 143 in file src\HAL
      At line 458 in file src\HAL

UART4_Handler 00000086

Symbol: UART4_Handler
   Definitions
      At line 569 in file src\HAL
   Uses
      At line 144 in file src\HAL
      At line 459 in file src\HAL

UART5_Handler 00000086

Symbol: UART5_Handler
   Definitions
      At line 570 in file src\HAL
   Uses
      At line 145 in file src\HAL
      At line 460 in file src\HAL

UART6_Handler 00000086

Symbol: UART6_Handler
   Definitions
      At line 571 in file src\HAL
   Uses
      At line 146 in file src\HAL
      At line 461 in file src\HAL

UART7_Handler 00000086

Symbol: UART7_Handler
   Definitions
      At line 572 in file src\HAL
   Uses
      At line 147 in file src\HAL
      At line 462 in file src\HAL

UDMAERR_Handler 00000086

Symbol: UDMAERR_Handler
   Definitions
      At line 558 in file src\HAL
   Uses
      At line 131 in file src\HAL
      At line 448 in file src\HAL

UDMA_Handler 00000086

Symbol: UDMA_Handler
   Definitions
      At line 557 in file src\HAL
   Uses
      At line 130 in file src\HAL
      At line 447 in file src\HAL

USB0_Handler 00000086




ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Relocatable symbols

Symbol: USB0_Handler
   Definitions
      At line 555 in file src\HAL
   Uses
      At line 128 in file src\HAL
      At line 445 in file src\HAL

UsageFault_Handler 0000001A

Symbol: UsageFault_Handler
   Definitions
      At line 267 in file src\HAL
   Uses
      At line 72 in file src\HAL
      At line 268 in file src\HAL

WDT0_Handler 00000086

Symbol: WDT0_Handler
   Definitions
      At line 530 in file src\HAL
   Uses
      At line 102 in file src\HAL
      At line 420 in file src\HAL

WTIMER0A_Handler 00000086

Symbol: WTIMER0A_Handler
   Definitions
      At line 579 in file src\HAL
   Uses
      At line 178 in file src\HAL
      At line 469 in file src\HAL

WTIMER0B_Handler 00000086

Symbol: WTIMER0B_Handler
   Definitions
      At line 580 in file src\HAL
   Uses
      At line 179 in file src\HAL
      At line 470 in file src\HAL

WTIMER1A_Handler 00000086

Symbol: WTIMER1A_Handler
   Definitions
      At line 581 in file src\HAL
   Uses
      At line 180 in file src\HAL
      At line 471 in file src\HAL

WTIMER1B_Handler 00000086

Symbol: WTIMER1B_Handler
   Definitions
      At line 582 in file src\HAL
   Uses
      At line 181 in file src\HAL



ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Relocatable symbols

      At line 472 in file src\HAL

WTIMER2A_Handler 00000086

Symbol: WTIMER2A_Handler
   Definitions
      At line 583 in file src\HAL
   Uses
      At line 182 in file src\HAL
      At line 473 in file src\HAL

WTIMER2B_Handler 00000086

Symbol: WTIMER2B_Handler
   Definitions
      At line 584 in file src\HAL
   Uses
      At line 183 in file src\HAL
      At line 474 in file src\HAL

WTIMER3A_Handler 00000086

Symbol: WTIMER3A_Handler
   Definitions
      At line 585 in file src\HAL
   Uses
      At line 184 in file src\HAL
      At line 475 in file src\HAL

WTIMER3B_Handler 00000086

Symbol: WTIMER3B_Handler
   Definitions
      At line 586 in file src\HAL
   Uses
      At line 185 in file src\HAL
      At line 476 in file src\HAL

WTIMER4A_Handler 00000086

Symbol: WTIMER4A_Handler
   Definitions
      At line 587 in file src\HAL
   Uses
      At line 186 in file src\HAL
      At line 477 in file src\HAL

WTIMER4B_Handler 00000086

Symbol: WTIMER4B_Handler
   Definitions
      At line 588 in file src\HAL
   Uses
      At line 187 in file src\HAL
      At line 478 in file src\HAL

WTIMER5A_Handler 00000086

Symbol: WTIMER5A_Handler



ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 589 in file src\HAL
   Uses
      At line 188 in file src\HAL
      At line 479 in file src\HAL

WTIMER5B_Handler 00000086

Symbol: WTIMER5B_Handler
   Definitions
      At line 590 in file src\HAL
   Uses
      At line 189 in file src\HAL
      At line 480 in file src\HAL

__user_initial_stackheap 00000088

Symbol: __user_initial_stackheap
   Definitions
      At line 639 in file src\HAL
   Uses
      At line 637 in file src\HAL
Comment: __user_initial_stackheap used once
121 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Handler_Stack_Size 00000200

Symbol: Handler_Stack_Size
   Definitions
      At line 26 in file src\HAL
   Uses
      At line 34 in file src\HAL
      At line 641 in file src\HAL

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 47 in file src\HAL
   Uses
      At line 46 in file src\HAL
      At line 52 in file src\HAL
      At line 642 in file src\HAL

Thread_Stack_Size 00000100

Symbol: Thread_Stack_Size
   Definitions
      At line 27 in file src\HAL
   Uses
      At line 37 in file src\HAL
Comment: Thread_Stack_Size used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SVC_Handler_C 00000000

Symbol: SVC_Handler_C
   Definitions
      At line 289 in file src\HAL
   Uses
      At line 296 in file src\HAL
Comment: SVC_Handler_C used once
__set_control 00000000

Symbol: __set_control
   Definitions
      At line 230 in file src\HAL
   Uses
      At line 236 in file src\HAL
Comment: __set_control used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 636 in file src\HAL
   Uses
      None
Comment: __use_two_region_memory unused
main 00000000

Symbol: main
   Definitions
      At line 231 in file src\HAL
   Uses
      At line 237 in file src\HAL
Comment: main used once
scheduler 00000000

Symbol: scheduler
   Definitions
      At line 288 in file src\HAL
      At line 356 in file src\HAL
   Uses
      At line 294 in file src\HAL
      At line 297 in file src\HAL
      At line 368 in file src\HAL
Warning: scheduler multiply defined
5 symbols
475 symbols in table
